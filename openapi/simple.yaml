openapi: 3.0.0
info:
  contact:
    email: robipolli@gmail.com
    name: Roberto Polli
    url: https://twitter.com/ioggstream
  description: |
    #### Documentazione
    Il servizio Ora esatta ritorna l'ora del server in formato RFC5424 (syslog).

    `2018-12-30T12:23:32Z`

    Qui va' inserita la documentazione principale del servizio.
    Il testo dev'essere diviso in piu' parti, tutte scritte in Markdown.

    Questa sezione e' informativa. Ricordati di inserire:

      * cosa fanno queste API?
      * chi puo' beneficiarne?
      * perche' sono utili?

    ##### Sottosezioni
    E' possibile utilizzare - con criterio - delle sottosezioni.

    #### Note

    Il servizio non richiede autenticazione, ma va' usato rispettando gli
    header di throttling esposti in conformita' alle Linee Guida del Modello di interoperabilita'.

    Usa questa sezione per annotazioni specifiche, riferimenti normativi e/o
    per manleve ed esclusioni di responsabilita' eventualmente non incluse in `termsOfService`.

    #### Informazioni tecniche ed esempi

    Esempio:

    ```
    http http://localhost:8443/datetime/v1/echo
    {
      'datetime': '2018-12-30T12:23:32Z'
    }
    ```

    Qui e' possibile introdurre brevi informazioni tecniche ed esempi.
    Attenzione: la `description` non sostituisce la documentazione di progetto,
    deve pero' facilitare l'esecuzione delle prime richieste.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Ora esatta.
  version: 1.0.0
  x-api-id: 00000000-0000-0000-0000-000000000000
  x-audience:
  - public
  x-lifecycle:
    deprecated: 2050-01-01
    maturity: published
    published: 1970-01-01
    retired: 2050-06-01
  x-summary: Questo servizio ritorna la data e l'ora attuali in UTC.
servers:
- description: Development server
  url: https://localhost:8443/datetime/v1
- description: Test server
  url: https://api.example.com/datetime/v1
  x-healthCheck:
    interval: 300
    timeout: 15
    url: https://api.example.com/datetime/v1/status
  x-sandbox: true
tags:
- description: Retrieve informations
  externalDocs:
    url: http://docs.my-api.com/pet-operations.htm
  name: public
paths:
  /echo:
    get:
      description: |
        Ritorna un timestamp in formato RFC5424
        prendendola dal server attuale.
      operationId: get_echo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timestamps'
          description: |
            Il server ha ritornato il timestamp.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '503':
          $ref: '#/components/responses/503ServiceUnavailable'
        default:
          $ref: '#/components/responses/default'
      summary: Ritorna un timestamp in formato RFC5424.
      tags:
      - public
  /status:
    get:
      description: |
        Ritorna lo stato dell'applicazione. A scopo
        di test, su base randomica puo' ritornare
        un errore.
      operationId: get_status
      responses:
        '200':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
          description: |
            Il server ha ritornato lo status. In caso di problemi
            ritorna sempre un problem+json.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '503':
          $ref: '#/components/responses/503ServiceUnavailable'
        default:
          $ref: '#/components/responses/default'
      summary: Ritorna lo stato dell'applicazione.
      tags:
      - public
components:
  headers:
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      schema:
        format: int32
        maximum: 186400
        minimum: 0
        type: integer
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        format: int32
        maximum: 1000000
        minimum: 0
        type: integer
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        format: int32
        maximum: 1000000
        minimum: 0
        type: integer
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        format: int32
        maximum: 186400
        minimum: 0
        type: integer
  responses:
    400BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Bad Request
    404NotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Not Found
    429TooManyRequests:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Too many requests
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
    503ServiceUnavailable:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Service Unavailable
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
    default:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Unexpected error
  schemas:
    Problem:
      additionalProperties: false
      description: |-
        This schema describes RFC7807 Problem Details for HTTP APIs.
        The specification is intentionally flexible, and allows to adapt
        the schema adding further properties, or not enforcing any of the properties
        below.

        To make this schema safe by default, additionalProperties are forbidden though.
        In case you need them, you can either re-define Problem or extend it
        using `allOf`.
      properties:
        detail:
          description: |
            A human readable explanation specific to this occurrence of the
            problem. You MUST NOT expose internal informations, personal
            data or implementation details through this field.

            `detail` supports localized patterns whereas `title` pattern is only in ascii.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: ^.{0,1024}$
          type: string
        instance:
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
          maxLength: 2048
          type: string
        status:
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized): the expressed pattern does not support unicode characters.
          example: Service Unavailable
          maxLength: 64
          pattern: ^[ -~]{0,64}$
          type: string
        type:
          default: about:blank
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          example: https://tools.ietf.org/html/rfc7231#section-6.6.4
          format: uri
          maxLength: 2048
          type: string
      type: object
    Timestamps:
      description: Un Timestamp in RFC5424
      properties:
        timestamp:
          example: '2018-12-30T12:23:32Z'
          format: date-time
          type: string
      type: object
